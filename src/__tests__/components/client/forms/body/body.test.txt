
// import { AntdRegistry } from '@ant-design/nextjs-registry';
import type { RenderOptions } from '@testing-library/react';
import { render } from '@testing-library/react';
// import { Layout } from 'antd';
import type { ReactElement } from 'react';
import { assert, describe, test } from 'vitest';

// import { ErrorBoundary, ErrorPage } from '@/components';
import { FormBody } from '@/components/client/forms/body/body';
import Providers from '@/providers/providers';
// import type { AppStore, RootState, AppStore, RootState} from '@/store/store';
import { setupStore } from '@/store/store';

// function msg(expected: string, result: string | Error): string {
//   return 'expected: "' + expected + '".\n But got: "' + result + '"';
// }

interface ExtendedRenderOptions extends Omit<RenderOptions, 'queries'> {
  preloadedState?: Partial<RootState>;
  store?: AppStore;
}

export const renderWithProviders = (
  ui: ReactElement,
  extendedRenderOptions: ExtendedRenderOptions = {},
) => {
  const { store = setupStore(), ...renderOptions } = extendedRenderOptions;

  const Wrapper = () => {
    return (
      <Providers>
        {/* <AntdRegistry> */}
        {/* <ErrorBoundary fallback={<ErrorPage />}> */}
          {/* <Layout> */}
            {ui}
          {/* </Layout> */}
          {/* </ErrorBoundary> */}
        {/* </AntdRegistry> */}
      </Providers>
    );
  };

  return {
    store,
    ...render(ui, { wrapper: Wrapper, ...renderOptions }),
  };
};

function action(payload: string): {
    payload: string;
    type: string;
} {
  return {
    payload: payload,
    type: '',
}
}

describe('component / forms / body', () => {
  test('must render component', () => {
    renderWithProviders(<FormBody body={'12345'} setBody={action} isGraphQL={false} schema={undefined}/>);
    assert(true);
  });
});
